<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.unocapstone.dragonslair</groupId>
    <artifactId>dragonslayer</artifactId>
    <version>4.0-SNAPSHOT</version>

<properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Java & tool versions -->
    <maven.compiler.release>21</maven.compiler.release>
    <javafx.version>21.0.8</javafx.version>
    <derby.version>10.15.2.0</derby.version>
    <junit.version>4.13.2</junit.version>
    <cucumber.version>7.14.0</cucumber.version>
    <surefire.version>3.2.5</surefire.version>
    <jlink.plugin.version>3.1.0</jlink.plugin.version>
    <jpackage.plugin.version>1.7.0</jpackage.plugin.version>

    <!-- Change this according to OS: win, linux, mac --> 
    <javafx.platform>win</javafx.platform>  

    <!-- Used for Jpackage -->
    <app.main.module>org.unocapstone.dragonslair</app.main.module>
    <app.main.class>org.unocapstone.dragonslair.Launcher</app.main.class>
    <app.name>DragonSlayer</app.name>
    <app.vendor>UNO Capstone</app.vendor>
</properties>

<dependencies>
    <!-- JavaFX (platform-classified) -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javafx.version}</version>
      <classifier>${javafx.platform}</classifier>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
      <classifier>${javafx.platform}</classifier>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
      <classifier>${javafx.platform}</classifier>
    </dependency>


    <!-- DerbyDB -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${derby.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!--  -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.2.2</version>
    </dependency>

    <dependency>
      <groupId>org.zeroturnaround</groupId>
      <artifactId>zt-zip</artifactId>
      <version>1.16</version>
    </dependency>

    <!-- JUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Cucumber -->
    <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.testfx</groupId>
        <artifactId>testfx-junit</artifactId>
        <version>4.0.18</version>
        <scope>test</scope>
    </dependency>
</dependencies>
    
<build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.13.0</version>
            <configuration>
                <release>${maven.compiler.release}</release>
            </configuration>
    </plugin>

    <!-- Allows for dev command mvn clean javafx:run -->
    <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <configuration>
            <mainClass>org.unocapstone.dragonslair.Launcher</mainClass>
        </configuration>
    </plugin>

    <!-- Surefire plugin for tests -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
            <argLine>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED --add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</argLine>
        </configuration>
    </plugin>

    <!-- Jlink plugin for Maven (creates trimmed JRE) -->
      <!-- Create trimmed runtime image in target/runtime -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jlink-plugin</artifactId>
        <version>${jlink.plugin.version}</version>
        <configuration>
          <addModules>
            <addModule>${app.main.module}</addModule>
            <addModule>java.sql</addModule>
            <addModule>javafx.controls</addModule>
            <addModule>javafx.fxml</addModule>
          </addModules>
          <stripDebug>true</stripDebug>
          <noHeaderFiles>true</noHeaderFiles>
          <noManPages>true</noManPages>
          <compress>2</compress>
          <output>${project.build.directory}/runtime</output>
        </configuration>
        <executions>
          <execution>
            <id>make-runtime</id>
            <phase>package</phase>
            <goals>
              <goal>jlink</goal>
            </goals>
          </execution>
        </executions>
    </plugin>



    <!-- Jpackage plugin for Maven -->
          <!-- Package with jpackage: app-image (dev) or MSI (release) -->
    <plugin>
        <groupId>org.panteleyev</groupId>
        <artifactId>jpackage-maven-plugin</artifactId>
        <version>${jpackage.plugin.version}</version>
        <configuration>
            <name>${app.name}</name>
            <appVersion>${project.version}</appVersion>
            <vendor>${app.vendor}</vendor>

            <!-- Inputs/outputs -->
            <input>${project.build.directory}</input>
            <dest>${project.build.directory}/distributable</dest>
            <type>${jpackage.type}</type>

            <!-- App entrypoints -->
            <mainJar>${project.build.finalName}.jar</mainJar>
            <mainClass>${app.main.class}</mainClass>
            <runtimeImage>${project.build.directory}/runtime</runtimeImage>

            <!-- Windows options -->
            <winMenu>true</winMenu>
            <winShortcut>true</winShortcut>
            <!-- Drop for GUI apps if you don't want a console window: -->
            <!-- <winConsole>false</winConsole> -->

            <!-- Optional: icon -->
            <!-- <icon>${project.basedir}/icons/app.ico</icon> -->
        </configuration>
        <executions>
            <execution>
            <id>jpackage</id>
            <phase>package</phase>
            <goals>
                <goal>jpackage</goal>
            </goals>
            </execution>
        </executions>
    </plugin>


            <!-- <plugin>
                Build an executable JAR
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <mainClass>org.unocapstone.dragonslair.Launcher</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <finalName>${project.build.finalName}</finalName>
                    <archive>
                        <manifest>
                            <mainClass>org.unocapstone.dragonslair.Launcher</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->
        </plugins>
    </build>
</project>